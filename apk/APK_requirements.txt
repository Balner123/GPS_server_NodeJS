This document outlines the requirements for an APK to communicate with the GPS server.

## 1. Submitting Location Data

**Endpoint:** `/api/devices/input`

**Method:** `POST`

**Headers:**
- `Content-Type: application/json`
- `Cookie`: The session cookie obtained after a successful login.

**Request Body (JSON):**

The request body should be a JSON object or an array of JSON objects with the following structure:

```json
{
  "device": "string (required)",
  "name": "string (optional)",
  "latitude": "number (required)",
  "longitude": "number (required)",
  "speed": "number (optional)",
  "altitude": "number (optional)",
  "accuracy": "number (optional)",
  "satellites": "number (optional)",
  "timestamp": "string (optional, ISO 8601 format, e.g., YYYY-MM-DDTHH:mm:ss.sssZ)"
}
```

**Field Descriptions:**

- `device`: The unique identifier for the device (e.g., IMEI, or any other unique string).
- `name`: The name of the device. This can be used to update the device name on the server.
- `latitude`: The latitude of the device.
- `longitude`: The longitude of the device.
- `speed`: The speed of the device in km/h.
- `altitude`: The altitude of the device in meters.
- `accuracy`: The accuracy of the location data in meters.
- `satellites`: The number of satellites used for the GPS fix.
- `timestamp`: The UTC timestamp of the location data. If not provided, the server will use the time of reception.

**Response Body (JSON):**

The server will respond with a JSON object with the following structure:

```json
{
  "success": "boolean",
  "message": "string",
  "interval_gps": "number",
  "interval_send": "number"
}
```

**Field Descriptions:**

- `success`: `true` if the data was received successfully, `false` otherwise.
- `message`: A message from the server.
- `interval_gps`: The interval in seconds at which the device should acquire a GPS fix.
- `interval_send`: The interval in seconds at which the device should send data to the server.
  
Notes:
- The app expects optional `interval_gps` and `interval_send` and ignores other fields in this response.

## 2. Device Registration

Before a device can submit data, it must be registered with a user account on the server. This can be done through the web interface or via the API.

**Endpoint:** `/api/apk/register-device`

**Method:** `POST`

**Headers:**
- `Content-Type: application/json`
- `Cookie`: The session cookie of the logged-in user.

**Request Body (JSON):**

```json
{
  "installationId": "string (required)",
  "deviceName": "string (required)"
}
```

**Response Body (JSON):**

```json
{
  "success": "boolean",
  "message": "string",
  "gps_interval": "number",
  "interval_send": "number"
}
```
